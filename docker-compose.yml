## docker-compose up 
# Para criar imagem
#docker build -t douglasprdesouza305/cr7-imports-gateway:1.0.0 .
#docker push douglasprdesouza305/cr7-imports-gateway:1.0.0
name: cr7imports

volumes:
   prometheus-data:
   grafana-data:
   redis_data:

networks:
    aw-network:
     driver: bridge		

services:

  apicr7imports:
    container_name: cr7ImportsAPI
    image: douglasprdesouza305/api-cr7-imports:${CR7IMPORTSAPI_VERSION}
    restart: always
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_BOOT_ENVIRONMENT=${CR7IMPORTSAPI_BOOT_ENVIRONMENT}
      - SPRING_PROFILES_ACTIVE=${CR7IMPORTSAPI_PROFILES_ACTIVE}
    ports:
      - "${CR7IMPORTSAPI_PORT}"
    volumes:
        - ./ProjetoIntegradorIIApiRest:/ProjetoIntegradorIIApiRest
        - ~/.m2:/root/.m2
    deploy:
       replicas: 1
       resources:
             limits:
                memory: 900M

  webServiceCR7:
    container_name: webServiceCR7
    image: douglasprdesouza305/web-service-cr7-imports:1.0.0
    restart: always
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_BOOT_ENVIRONMENT=Production
    ports:
      - "8089:8080"
    volumes:
      - ./ProjetoIntegradorIIApiRest:/ProjetoIntegradorIIApiRest
      - ~/.m2:/root/.m2

  cr7ConfigServer:
     container_name: cr7Configserver
     image: douglasprdesouza305/cr7-imports-configserver:1.0.0
     restart: always
     environment:
      - TZ=America/Sao_Paulo
      - SPRING_BOOT_ENVIRONMENT=Production
      - SPRING_PROFILES_ACTIVE=local 
     ports:
      - "8889:8889"
     volumes:
      - ./ProjetoIntegradorIIApiRest:/ProjetoIntegradorIIApiRest
      - ~/.m2:/root/.m2	  

  cr7Gateway:
     container_name: cr7Gateway
     image: douglasprdesouza305/cr7-imports-gateway:latest
     restart: always
     environment:
     - TZ=America/Sao_Paulo
     - SPRING_BOOT_ENVIRONMENT=Production
     - SPRING_PROFILES_ACTIVE=producao 
     ports:
     - "8888:8888"
     volumes:
     - ./ProjetoIntegradorIIApiRest:/ProjetoIntegradorIIApiRest
     - ~/.m2:/root/.m2	  	  
     depends_on:
     - cr7ConfigServer

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:${DOZZLE_VERSION}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOZZLE_USERS_FILE}:/data/users.yml
    ports:
      - "${DOZZLE_PORT}"
    environment:
      DOZZLE_AUTH_PROVIDER: ${DOZZLE_AUTH_PROVIDER}
 
  prometheus:
     container_name: prometheus
     image: prom/prometheus:latest	  
     volumes: 
       - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
       - prometheus-data:/prometheus
     extra_hosts:
       - 'host.docker.internal:host-gateway'
     ports: 
       - "9090:9090"  

  grafana:
     container_name: grafana
     image: grafana/grafana:latest
     ports:
       - "3000:3000"
     networks: 
       - aw-network

  nginx:
     container_name: nginx
     image: nginx:latest
     volumes:
       - ./docker/default.conf:/etc/nginx/conf.d/default.conf
     ports:
       - "80:88" 
     depends_on:
       - cr7ImportsAPI
     networks:
       - aw-network   

  redis:
     container_name: redis
     image: redis:${REDIS_VERSION}
     command: redis-server --requirepass ${REDIS_PASSWORD}
     ports:
       - ${REDIS_PORT}
     volumes:
       - redis_data:/data	   